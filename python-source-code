class BasePasswordManager:
    def __init__(self, password):
        self.old_passwords = [password]

    def get_password(self):
        return self.old_passwords[-1]

    def is_correct(self, password):
        return password == self.old_passwords[-1]


class PasswordManager(BasePasswordManager):
    SECURITY_LEVELS = {
        0: r'^[a-zA-Z0-9]+$',
        1: r'^(?=.*[a-zA-Z])(?=.*\d)[a-zA-Z0-9]+$',
        2: r'^(?=.*[a-zA-Z])(?=.*\d)(?=.*[@$!%*#?&])[a-zA-Z0-9@$!%*#?&]+$',
    }

    def set_password(self, new_password):
        current_level = self.get_level()
        new_level = self.get_level(new_password)

        if len(new_password) < 6:
            return False

        if new_level < current_level:
            return False

        if current_level == new_level and new_password in self.old_passwords:
            return False

        self.old_passwords.append(new_password)
        return True

    def get_level(self, password=None):
        if password is None:
            password = self.get_password()

        for level, pattern in self.SECURITY_LEVELS.items():
            if re.match(pattern, password):
                return level

        return None
